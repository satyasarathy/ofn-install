---
# Note that by relying on this playbook you will end up with a development
# environment that uses some of roles we use for live instances. You won't have
# Nginx nor unicorn so will have to manually start the rails running `bundle
# exec rails server`.
#
# Also, there are a number of things you will need to do manually such as
# creating the development database with `bundle exec rake db:create` as you
# would do on your host without containers.

- name: provision
  hosts: ofn_servers
  remote_user: "{{ user }}"
  roles:
    - role: unicorn_user # Create unprivileged user to run unicorn
      tags: unicorn_user

    - role: common # Install common apps and libraries, and setup shell.
      tags: common

    - role: language # Setup locale.
      tags: language

    - role: zzet.rbenv # Install ruby. If missing run: ansible-galaxy install zzet.rbenv
      rbenv:
        env: user
        version: v1.0.0
        default_ruby: "{{ ruby_version }}"
        rubies:
          - version: "{{ ruby_version }}"

      rbenv_users:
        - "{{ unicorn_user }}"
      tags: ruby

    - role: dbserver # Set up database server and user for the app.
      become: yes
      become_user: root
      tags: dbserver
      db_user_roles: SUPERUSER,CREATEDB

    - role: datadog
      become: yes
      tags: datadog

  tasks:
    - name: install bundler
      # This needs to be run inside a bash shell to initialise rbenv
      # See http://stackoverflow.com/questions/22115936/install-bundler-gem-using-ansible
      command: bash -lc "./script/install-bundler --no-ri --no-rdoc"
      args:
        chdir: /opt/openfoodnetwork
      register: bundler
      changed_when: bundler.stdout | length > 0
      become: yes
      become_user: "{{ unicorn_user }}"
      tags: bundler

  vars:
    ansible_python_interpreter: /usr/bin/python2.7
    language_packages:
      - language-pack-en-base
    language: en_US.UTF-8
    users_sysadmin: []
