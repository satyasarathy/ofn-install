---

# Remove old rollbacks so they aren't used accidentally after errors.

- name: remove the old rollbacks
  file:
    dest: "{{ item }}"
    state: absent
  with_items:
    - "{{ rollback_path }}"
    - "{{ rollback_sql_path }}"
  tags: clone

# Create a rollback release

- name: create a database rollback version
  postgresql_db:
    name: "{{ db }}"
    state: dump
    target: "{{ rollback_tmp_path }}"
  become: yes
  become_user: postgres

- name: move to releases folder
  command: mv {{ rollback_tmp_path }} {{ releases_path }}/{{ transitional_rollback_timestamp }}.sql.gz
  become: yes
  become_user: root
  args:
    creates: "{{ releases_path }}/{{ transitional_rollback_timestamp }}.sql.gz"

- name: update file ownership
  file:
    path: "{{ releases_path }}/{{ transitional_rollback_timestamp }}.sql.gz"
    state: touch
    owner: "{{ unicorn_user }}"
    group: "{{ unicorn_user }}"
  become: yes
  become_user: root

- name: copy repo to archived releases path # noqa 301
  command: cp -TLr {{ current_path }} {{ releases_path }}/{{ transitional_rollback_timestamp }}

# Symlink database dump and current app to /rollback

- name: symlink to database rollback
  file:
    src: "{{ releases_path }}/{{ transitional_rollback_timestamp }}.sql.gz"
    dest: "{{ rollback_sql_path }}"
    owner: "{{ unicorn_user }}"
    state: link
    force: yes
  become: yes

- name: symlink release to rollback path
  file:
    src: "{{ releases_path }}/{{ transitional_rollback_timestamp }}"
    dest: "{{ rollback_path }}"
    owner: "{{ unicorn_user }}"
    state: link
    force: yes
  become: yes

# Clean up old release files

- name: check for old release files
  shell: set -o pipefail && ls -1tr | head -n -10
  args:
    chdir: "{{ releases_path }}"
    executable: /bin/bash
  become: yes
  changed_when: False
  register: releases_for_deletion

- name: delete old release files if present
  file:
    path: "{{ releases_path }}/{{ item }}"
    state: absent
  with_items: "{{ releases_for_deletion.stdout_lines | list }}"
  become: yes
